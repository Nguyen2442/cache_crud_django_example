version: '3'

volumes:
  sample_local_postgres_data: {}
  sample_local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./config/docker/local/django/Dockerfile
    image: sample_app_django
    platform: linux/x86_64
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./envs/.django
      - ./envs/.postgres
    ports:
      - "8000:8000"
    command: /start
  
  redis:
    image: redis:6-alpine
    ports:
        - "6379:6379"
    tty: true
    stdin_open: true

  # celery_worker:
  #   build:
  #     context: .
  #     dockerfile: ./config/docker/local/django/Dockerfile
  #   image: django_celery_example_celery_worker
  #   command: /start-celeryworker
  #   volumes:
  #     - .:/app:z
  #   env_file:
  #     - ./envs/.env
  #   depends_on:
  #     - redis
  #     - postgres

  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: ./config/docker/local/django/Dockerfile
  #   image: django_celery_example_celery_beat
  #   command: /start-celerybeat
  #   volumes:
  #     - .:/app:z
  #   env_file:
  #     - ./envs/.env
  #   depends_on:
  #     - redis
  #     - postgres

  # flower:
  #   build:
  #     context: .
  #     dockerfile: ./config/docker/local/django/Dockerfile
  #   image: django_celery_example_celery_flower
  #   command: /start-flower
  #   volumes:
  #     - .:/app:z
  #   env_file:
  #     - ./envs/.env
  #   ports:
  #     - 5557:5555
  #   depends_on:
  #     - redis
  #     - postgres

  kafka_consumer:
    <<: *django
    image: kafka_consumer_image
    ports: []
    depends_on:
      - broker
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    command: /start-faust

  postgres:
    build:
      context: .
      dockerfile: ./config/docker/production/postgres/Dockerfile
    image: sample_production_postgres
    container_name: sample_local_postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - sample_local_postgres_data:/var/lib/postgresql/data:Z
      - sample_local_postgres_data_backups:/backups:z
    env_file:
      - ./envs/.postgres
    ports:
        - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    restart: on-failure

